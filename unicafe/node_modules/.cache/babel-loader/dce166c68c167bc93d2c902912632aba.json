{"ast":null,"code":"import _slicedToArray from \"/Users/akinori/Documents/fullstackopen/unicafe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/akinori/Documents/fullstackopen/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = ({\n  value,\n  setter,\n  label\n}) => {\n  const handleClick = () => setter(value + 1);\n\n  return React.createElement(\"button\", {\n    onClick: handleClick(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, label);\n};\n\nconst Display = ({\n  value,\n  label\n}) => {\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, label, \" \", value);\n};\n\nconst App = () => {\n  // save clicks of each button to own state\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  console.log(good);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Give feedback\"), React.createElement(Button, {\n    value: good,\n    setter: () => setGood(value + 1),\n    label: 'good',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Button, {\n    value: neutral,\n    setter: () => setNeutral(value + 1),\n    label: 'neutral',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Button, {\n    value: bad,\n    setter: () => setBad(value + 1),\n    label: 'bad',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Statistics\"), React.createElement(Display, {\n    value: good,\n    label: 'good',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Display, {\n    value: neutral,\n    label: 'neutral',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Display, {\n    value: bad,\n    label: 'good',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/akinori/Documents/fullstackopen/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","value","setter","label","handleClick","Display","App","good","setGood","neutral","setNeutral","bad","setBad","console","log","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA;AAAjB,CAAD,KAA8B;AAC3C,QAAMC,WAAW,GAAG,MAAMF,MAAM,CAACD,KAAK,GAAG,CAAT,CAAhC;;AACA,SACE;AAAQ,IAAA,OAAO,EAAEG,WAAW,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KADH,CADF;AAKD,CAPD;;AASA,MAAME,OAAO,GAAG,CAAC;AAAEJ,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAD,KAAsB;AACpC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KADH,OACWF,KADX,CADF;AAKD,CAND;;AAQA,MAAMK,GAAG,GAAG,MAAM;AAChB;AADgB,oBAEQR,QAAQ,CAAC,CAAD,CAFhB;AAAA;AAAA,QAETS,IAFS;AAAA,QAEHC,OAFG;;AAAA,qBAGcV,QAAQ,CAAC,CAAD,CAHtB;AAAA;AAAA,QAGTW,OAHS;AAAA,QAGAC,UAHA;;AAAA,qBAIMZ,QAAQ,CAAC,CAAD,CAJd;AAAA;AAAA,QAITa,GAJS;AAAA,QAIJC,MAJI;;AAMhBC,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAGA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEA,IAAf;AAAqB,IAAA,MAAM,EAAE,MAAMC,OAAO,CAACP,KAAK,GAAG,CAAT,CAA1C;AAAuD,IAAA,KAAK,EAAE,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEQ,OAAf;AAAwB,IAAA,MAAM,EAAE,MAAMC,UAAU,CAACT,KAAK,GAAG,CAAT,CAAhD;AAA6D,IAAA,KAAK,EAAE,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEU,GAAf;AAAoB,IAAA,MAAM,EAAE,MAAMC,MAAM,CAACX,KAAK,GAAG,CAAT,CAAxC;AAAqD,IAAA,KAAK,EAAE,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,EAOE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEM,IAAhB;AAAsB,IAAA,KAAK,EAAE,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEE,OAAhB;AAAyB,IAAA,KAAK,EAAE,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEE,GAAhB;AAAqB,IAAA,KAAK,EAAE,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD,CAtBD;;AAwBAZ,QAAQ,CAACgB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = ({ value, setter, label }) => {\n  const handleClick = () => setter(value + 1)\n  return (\n    <button onClick={handleClick()}>\n      {label}\n    </button>\n  )\n}\n\nconst Display = ({ value, label }) => {\n  return (\n    <p>\n      {label} {value}\n    </p>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  console.log(good)\n\n\n  return (\n    < div >\n      <h1>Give feedback</h1>\n      <Button value={good} setter={() => setGood(value + 1)} label={'good'} />\n      <Button value={neutral} setter={() => setNeutral(value + 1)} label={'neutral'} />\n      <Button value={bad} setter={() => setBad(value + 1)} label={'bad'} />\n\n      <h1>Statistics</h1>\n      <Display value={good} label={'good'} />\n      <Display value={neutral} label={'neutral'} />\n      <Display value={bad} label={'good'} />\n    </div >\n  )\n}\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}