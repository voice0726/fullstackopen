{"ast":null,"code":"import _slicedToArray from \"/Users/akinori/Documents/fullstackopen/part1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/akinori/Documents/fullstackopen/part1/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = props => {\n  const _useState = useState(10),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  const setToValue = newValue => {\n    setValue(newValue);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, value, React.createElement(\"button\", {\n    onClick: () => setToValue(1000),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"thousand\"), React.createElement(\"button\", {\n    onClick: () => setToValue(0),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"reset\"), React.createElement(\"button\", {\n    onClick: () => setToValue(value + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"increment\"));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/akinori/Documents/fullstackopen/part1/src/index.js"],"names":["React","useState","ReactDOM","App","props","value","setValue","setToValue","newValue","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA,oBACKH,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,QACdI,KADc;AAAA,QACPC,QADO;;AAGrB,QAAMC,UAAU,GAAIC,QAAD,IAAc;AAC/BF,IAAAA,QAAQ,CAACE,QAAD,CAAR;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KADH,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAME,UAAU,CAAC,IAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAKE;AAAQ,IAAA,OAAO,EAAE,MAAMA,UAAU,CAAC,CAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,EAQE;AAAQ,IAAA,OAAO,EAAE,MAAMA,UAAU,CAACF,KAAK,GAAG,CAAT,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,CADF;AAcD,CArBD;;AAuBAH,QAAQ,CAACO,MAAT,CACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom';\n\nconst App = (props) => {\n  const [value, setValue] = useState(10)\n\n  const setToValue = (newValue) => {\n    setValue(newValue)\n  }\n\n  return (\n    <div>\n      {value}\n      <button onClick={() => setToValue(1000)}>\n        thousand\n      </button>\n      <button onClick={() => setToValue(0)}>\n        reset\n      </button>\n      <button onClick={() => setToValue(value + 1)}>\n        increment\n      </button>\n    </div>\n  )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}