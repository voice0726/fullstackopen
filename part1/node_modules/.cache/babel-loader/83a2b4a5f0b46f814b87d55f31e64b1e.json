{"ast":null,"code":"import _slicedToArray from \"/Users/akinori/Documents/fullstackopen/part1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/akinori/Documents/fullstackopen/part1/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Display = props => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4\n  },\n  __self: this\n}, props.value);\n\nconst Button = props => React.createElement(\"button\", {\n  onClick: props.handleClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, props.text);\n\nconst App = props => {\n  const _useState = useState(10),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  const setToValue = newValue => {\n    setValue(newValue);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Display, {\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Button, {\n    handleClick: () => setToValue(1000),\n    text: \"thousand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Button, {\n    handleClick: () => setToValue(0),\n    text: \"reset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Button, {\n    handleClick: () => setToValue(value + 1),\n    text: \"increment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/akinori/Documents/fullstackopen/part1/src/index.js"],"names":["React","useState","ReactDOM","Display","props","value","Button","handleClick","text","App","setValue","setToValue","newValue","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMA,KAAK,CAACC,KAAZ,CAAzB;;AAEA,MAAMC,MAAM,GAAIF,KAAD,IACb;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACG,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGH,KAAK,CAACI,IADT,CADF;;AAMA,MAAMC,GAAG,GAAIL,KAAD,IAAW;AAAA,oBACKH,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,QACdI,KADc;AAAA,QACPK,QADO;;AAGrB,QAAMC,UAAU,GAAIC,QAAD,IAAc;AAC/BF,IAAAA,QAAQ,CAACE,QAAD,CAAR;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEP,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,MAAMM,UAAU,CAAC,IAAD,CAArC;AAA6C,IAAA,IAAI,EAAC,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,MAAMA,UAAU,CAAC,CAAD,CAArC;AAA0C,IAAA,IAAI,EAAC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,MAAMA,UAAU,CAACN,KAAK,GAAG,CAAT,CAArC;AAAkD,IAAA,IAAI,EAAC,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CAfD;;AAiBAH,QAAQ,CAACW,MAAT,CACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom';\n\nconst Display = props => <div>{props.value}</div>\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n)\n\nconst App = (props) => {\n  const [value, setValue] = useState(10)\n\n  const setToValue = (newValue) => {\n    setValue(newValue)\n  }\n\n  return (\n    <div>\n      <Display value={value} />\n      <Button handleClick={() => setToValue(1000)} text=\"thousand\" />\n      <Button handleClick={() => setToValue(0)} text=\"reset\" />\n      <Button handleClick={() => setToValue(value + 1)} text=\"increment\" />\n    </div>\n  )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}